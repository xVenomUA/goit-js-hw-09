{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAUC,SAASC,cAAc,QACjCC,EAAU,CACdC,QAAS,KAGX,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAqCPP,EAAQe,iBAAiB,UAjCzB,SAAiBC,GACfA,EAAIC,iBACJ,IAAMC,EAAQC,OAAOH,EAAII,OAAOb,MAAMc,OAChCC,EAAOH,OAAOH,EAAII,OAAOE,KAAKD,OAC9BE,EAASJ,OAAOH,EAAII,OAAOG,OAAOF,OACxC,GAAIH,EAAQ,GAAKI,EAAQ,EACvBE,EAAA1B,GAAS2B,OAAOC,KAAK,2BAA4BvB,QAGnD,GAAIoB,GAAU,EACZC,EAAA1B,GAAS2B,OAAOC,KAAK,qBAAsBvB,OAD7C,CAIA,IAAK,IAAIwB,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAAG,CAClC,IAAIC,EAAWD,EAAI,EACfE,EAAWF,EAAIL,EAAOJ,EAC1BY,QAAQC,IAAIF,GACZxB,EAAcuB,EAAUC,GACrBG,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBiB,EAAA1B,GAAS2B,OAAOS,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OAC5CJ,E,IAGLiC,OAAM,SAAAH,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBiB,EAAA1B,GAAS2B,OAAOY,QACd,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OAC3CJ,E,IAIRmC,KAAKC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst btnform = document.querySelector('form');\nconst options = {\n  timeout: 5000,\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onclick(evt) {\n  evt.preventDefault();\n  const delay = Number(evt.target.delay.value);\n  const step = Number(evt.target.step.value);\n  const amount = Number(evt.target.amount.value);\n  if (delay < 0 || step  < 0 ) {\n    Notiflix.Notify.info('DELAY AND STEP ONLY > 0 ', options);\n    return;\n  }\n  if (amount <= 0) { \n    Notiflix.Notify.info('AMOUNT HAVE TO > 0', options);\n    return;\n  }\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let alldelay = i * step + delay;\n    console.log(alldelay);\n    createPromise(position, alldelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`,\n          options\n        );\n      });\n  }\n  form.reset();\n}\nbtnform.addEventListener('submit', onclick);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$btnform","document","querySelector","$ce04d3a99e08e73b$var$options","timeout","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delay1","Number","target","value","step","amount","$parcel$interopDefault","Notify","info","i","position1","alldelay","console","log","then","param","success","concat","catch","failure","form","reset"],"version":3,"file":"03-promises.66e4a286.js.map"}